name: Portfolio Ibrahima Dems Pipeline

on:
  push:
    branches:
      - "*"

  pull_request:
    branches:
      - "*"

jobs:
  check_syntaxes:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       python-version: [3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check lint code with flak8
        run: |
          pip install flake8
          flake8 . --max-line-length=100


  build:
    name: Build & Push image Docker
    runs-on: ubuntu-latest
    needs: check_syntaxes
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        env:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: docker login -u $username -p $password

      - name: Build the Docker image
        run: docker build . -t devibrahima/portfolio:latest

      - name: Push Docker Image to registry
        run: docker push devibrahima/portfolio:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy application
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          DOCKER_IMAGE: devibrahima/portfolio:latest
        run: |
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP -p 22 << EOF
            cd portfolio

            # Pull the latest image
            docker pull $DOCKER_IMAGE

            # Stop and remove the existing container
            docker compose down

            # Start updated containers
            docker compose up -d

            # Remove unused images to clean up space
            docker image prune -f
          EOF